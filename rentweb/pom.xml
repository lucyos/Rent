<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>com.babel</groupId>
  <artifactId>rent-web</artifactId>
  <version>1.0</version>
  <packaging>war</packaging>
  <name>Rents Web FrontEnd</name>
  <build>
	<sourceDirectory>src</sourceDirectory>
  	<testSourceDirectory>test</testSourceDirectory>
	
    <resources>
  		<resource>
  			<directory>resources</directory>
  			<filtering>true</filtering>
  		</resource>

		<resource>
			<directory>src</directory>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.properties</include>
			</includes>
		</resource>  	
		<resource>
			<directory>test</directory>
			<targetPath>../test-classes</targetPath>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.properties</include>
			</includes>
		</resource>

  	</resources>
	
    <plugins>
    
	  	<plugin>
	  		<artifactId>maven-compiler-plugin</artifactId>
	  		<configuration>
	  			<source>1.6</source>
	  			<target>1.6</target>
	  		</configuration>
	  	</plugin>
		<plugin>
			<artifactId>maven-surefire-plugin</artifactId>
			<configuration>
				<skipTests>true</skipTests>
			</configuration>
		</plugin>
		<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					
					<warSourceDirectory>${basedir}/WebContent</warSourceDirectory>
					
				</configuration>
			</plugin>
    </plugins>
  </build>
 
  <dependencies>
   
   <!-- rent-app-->
	 
  	 <dependency>
			<groupId>com.babel</groupId>
			<artifactId>rent</artifactId>
			<version>1.0</version>
			<!-- optional=it will not be included in WEB-INF/lib
			Use this config ONLY when the war is deployed in .ear
			@see rentEAR/pom.xml  
			<optional>true</optional>-->
			<exclusions>
        <exclusion>  <!-- JBoss App Server already has a JPA-Hibernate implementation. So, avoid classloader conflicts -->
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
        </exclusion>
      </exclusions> 
		</dependency>
		<dependency> <!-- Still need this dependency to compile. <scope>provided</scope> will not include the libraries in WEB-INF  -->
			 <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <version>3.4.0.GA</version>
			<scope>provided</scope> 
		</dependency>

		

	<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
	</dependency>
	<dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.13</version>
      <scope>provided</scope>
    </dependency>
   
    
    <!-- common REST functionality dependencies -->
    <dependency>
  		 <groupId>org.codehaus.jackson</groupId>
   		  <artifactId>jackson-mapper-asl</artifactId>
   		  <version>1.9.9</version>
  	</dependency>
	
    <dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.13</version>
	</dependency>
	<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>1.13</version>
	</dependency>
	<dependency>
		<groupId>com.sun.jersey</groupId>
		<artifactId>jersey-client</artifactId>
		<version>1.13</version>
	</dependency>
	<dependency>
		<groupId>com.sun.jersey</groupId>
		<artifactId>jersey-json</artifactId>
		<version>1.13</version>
	</dependency>
	
  <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    
  </dependencies>
</project>